#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Controller.h"
#include "Passenger.h"
#include "menu.h"

#define RETRIES 3
#define MENU_OPTIONS 10

/****************************************************
    Menu:
     1. Cargar los datos de los pasajeros desde el archivo data.csv (modo texto).
     2. Cargar los datos de los pasajeros desde el archivo data.csv (modo binario).
     3. Alta de pasajero
     4. Modificar datos de pasajero
     5. Baja de pasajero
     6. Listar pasajeros
     7. Ordenar pasajeros
     8. Guardar los datos de los pasajeros en el archivo data.csv (modo texto).
     9. Guardar los datos de los pasajeros en el archivo data.csv (modo binario).
    10. Salir
 *****************************************************/

int main()
{
	int option = 0;
	LinkedList* listaVuelos =ll_newLinkedList();
	LinkedList* listaPasajeros = ll_newLinkedList();
	int flag[2] = {0,0};
	do{
		option=menu_menu("TRABAJO PRACTICO 3",
				"\n\n1.  Cargar los datos de los pasajeros desde el archivo data.csv (modo texto)."
				"\n2.  Cargar los datos de los pasajeros desde el archivo data.bin (modo binario)."
				"\n3.  Alta de pasajero"
				"\n4.  Modificar datos de pasajero"
				"\n5.  Baja de pasajero"
				"\n6.  Listar pasajeros"
				"\n7.  Ordenar pasajeros"
				"\n8.  Guardar los datos de los pasajeros en el archivo data.csv (modo texto)."
				"\n9.  Guardar los datos de los pasajeros en el archivo data.csv (modo binario)."
				"\n10. Salir", "ERROR, INTENTE OPCION <1-10>", RETRIES, MENU_OPTIONS);
		switch(option)
		{
		case 1:
			if(flag[1]==0)
			{
				controller_loadFromText("data.csv",listaPasajeros);
				controller_loadFlightsFromText("dataVuelos.csv",listaVuelos);
				flag[1]=1;
			}
			else
			{
				printf("\nYA HAY UN ARCHIVO CARGADO.");
			}
			break;
		case 2:
			if(flag[1]== 0)
			{
				if(controller_loadFromBinary("dataB.bin",listaPasajeros) == 0)
				{
					flag[1]= 1;
				}
			}
			else
			{
				printf("\nYA HAY UN ARCHIVO CARGADO");
			}
			break;
		case 3:
			if(flag[2]==0)
			{
				controller_addPassenger(listaPasajeros,listaVuelos);
				flag[2]=1;
			}
			break;
		case 4:
			if(flag[1]== 1 || flag[2] ==1)
			{
				controller_editPassenger(listaPasajeros, listaVuelos);
			}
			else
			{
				printf("ANTES DEBE CARGAR AL MENOS UN PASAJERO"
						"\nO CARGAR UN ARCHIVO CON PASAJEROS");
			}
			break;
		case 5:
			if(flag[1]== 1 || flag[2] ==1)
			{
				controller_removePassenger(listaPasajeros, listaVuelos);
			}
			else
			{
				printf("ANTES DEBE CARGAR AL MENOS UN PASAJERO"
						"\nO CARGAR UN ARCHIVO CON PASAJEROS");
			}
			break;
		case 6:
			if(flag[1]== 1 || flag[2] ==1)
			{
				controller_ListPassenger(listaPasajeros, listaVuelos);
			}
			else
			{
				printf("ANTES DEBE CARGAR AL MENOS UN PASAJERO"
						"\nO CARGAR UN ARCHIVO CON PASAJEROS");
			}
			break;
		case 7:
			if(flag[1]== 1 || flag[2] ==1)
			{

			}
			else
			{
				printf("ANTES DEBE CARGAR AL MENOS UN PASAJERO"
						"\nO CARGAR UN ARCHIVO CON PASAJEROS");
			}
			break;
		case 8:
			if(flag[1]== 1 || flag[2] ==1)
			{

			}
			else
			{
				printf("ANTES DEBE CARGAR AL MENOS UN PASAJERO"
						"\nO CARGAR UN ARCHIVO CON PASAJEROS");
			}
			break;
		case 9:
			if(flag[1]== 1 || flag[2] ==1)
			{

			}
			else
			{
				printf("ANTES DEBE CARGAR AL MENOS UN PASAJERO"
						"\nO CARGAR UN ARCHIVO CON PASAJEROS");
			}
			break;
		}
	}while(option != 10);
	return 0;
}

