/*
 * eFlight.c
 *
 * Created on: 5 may. 2022
 * Author: Alejandro Alberto Martín Rozas  - División H.
 * Esta bilioteca contiene las funciones de la estructura eFlights
 * Versión 1.0 del 13 de Mayo de 2022.
 * */

#include "Flight.h"

Flight* Flight_new()
{
	Flight* memoryPointer = NULL;
	memoryPointer = (Flight*) malloc(sizeof(Flight)*2);
	return memoryPointer;
}
Flight* Flight_newParametros(char* codigoVueloStr,char* estadoVueloStr)
{
	Flight* newFlight = Flight_new();
	if(codigoVueloStr != NULL
			&& estadoVueloStr != NULL
			&& newFlight  != NULL)
	{
		if(	(Flight_setCodigoVuelo(newFlight,(codigoVueloStr)) != 0) ||
				(Flight_setEstadoVuelo(newFlight,atoi(estadoVueloStr)) != 0))
		{
			Flight_delete(newFlight);
			newFlight = NULL;;
		}
	}
	return newFlight;
}
void Flight_delete(Flight* this)
{
	free(this);
}

int Flight_setCodigoVuelo(Flight* this,char* codigoVuelo)
{
	int rtn = -1;
	if(this != NULL && codigoVuelo != NULL)
	{
		strcpy(this->codigoVuelo,codigoVuelo);
		rtn = 0;
	}
	return rtn;
}
int Flight_getCodigoVuelo(Flight* this,char* codigoVuelo)
{
	int rtn = -1;
	if(this != NULL &&  codigoVuelo != NULL)
	{
		strcpy(codigoVuelo,this->codigoVuelo);
		rtn = 0;
	}
	return rtn;
}
int Flight_setEstadoVuelo(Flight* this,int estadoVuelo)
{
	int rtn = -1;
	if(this != NULL && estadoVuelo > 0)
	{
		this->estadoVuelo=estadoVuelo;
		rtn = 0;
	}
	return rtn;
}
int Flight_getEstadoVuelo(Flight* this, int* estadoVuelo)
{
	int rtn = -1;
	if(this != NULL &&  estadoVuelo != NULL)
	{
		*estadoVuelo=this->estadoVuelo;
		rtn = 0;
	}
	return rtn;
}
int Flight_setData(Flight* this)
{
	int rtn=-1;
	Flight FlightBuffer;
	int flightStatus;
	if(this!=NULL)
	{
		printf("\n\t\t\tCARGA DE VUELO\t\t\t");
		if(input_getAlphaNumericString("INGRESE EL CODIGO DE VUELO:", RETRIES, "ERROR, INGRESE EL CODIGO DE VUELOVALIDO:", FlightBuffer.codigoVuelo, FLYCODE_LENGTH) == 0)
		{
			flightStatus=menu_menu("ELIJA EL ESTADO DE VUELO",
					"\n1 - EN HORARIO."
					"\n2 - RETRASADO."
					"\n3 - ATERRIZADO."
					"\n4 - EN VUELO."
					,"ERROR INTENTE DE NUEVO:"
					, RETRIES
					, 4);
			if(flightStatus!=-1)
			{
				switch (flightStatus)
				{
				case SCHEDULED:
					FlightBuffer.estadoVuelo=SCHEDULED;
					break;
				case DELAYED:
					FlightBuffer.estadoVuelo=DELAYED;
					break;
				case LANDED:
					FlightBuffer.estadoVuelo=LANDED;
					break;
				case IN_AIR:
					FlightBuffer.estadoVuelo=IN_AIR;
					break;
				}
				if(Flight_setCodigoVuelo(this, FlightBuffer.codigoVuelo)!=0 ||
						Flight_setEstadoVuelo(this, FlightBuffer.estadoVuelo)!= 0)
				{
					free(this);
					this = NULL;
				}
				else
				{
					rtn=0;
				}
			}
			else
			{
				rtn=-3;
			}
		}
		else
		{
			rtn=-2;
		}
	}
	return rtn;
}

